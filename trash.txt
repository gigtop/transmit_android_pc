def sor(n, a, omega=1.25, tol=1e-9, max_iter=10000):
    x = [0.0] * n  # начальное приближение

    for _ in range(max_iter):
        x_new = x[:]
        for i in range(n):
            # --- проверка на ноль на диагонали ---
            if abs(a[i][i]) < 1e-12:
                # ищем строку ниже с ненулевым элементом
                swap = -1
                for r in range(i+1, n):
                    if abs(a[r][i]) > 1e-12:
                        swap = r
                        break
                if swap == -1:
                    raise ValueError(f"Невозможно решить: ноль на диагонали в строке {i}")
                a[i], a[swap] = a[swap], a[i]

            s1 = sum(a[i][j] * x[j] for j in range(i))
            s2 = sum(a[i][j] * x[j] for j in range(i+1, n))
            x[i] = (1 - omega) * x[i] + omega * (a[i][n] - s1 - s2) / a[i][i]

        if max(abs(x[i] - x_new[i]) for i in range(n)) < tol:
            return x

    return x